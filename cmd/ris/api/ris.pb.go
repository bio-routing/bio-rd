// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.4
// source: github.com/bio-routing/bio-rd/cmd/ris/api/ris.proto

package api

import (
	context "context"
	api "github.com/bio-routing/bio-rd/net/api"
	api1 "github.com/bio-routing/bio-rd/route/api"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ObserveRIBRequest_AFISAFI int32

const (
	ObserveRIBRequest_IPv4Unicast ObserveRIBRequest_AFISAFI = 0
	ObserveRIBRequest_IPv6Unicast ObserveRIBRequest_AFISAFI = 1
)

// Enum value maps for ObserveRIBRequest_AFISAFI.
var (
	ObserveRIBRequest_AFISAFI_name = map[int32]string{
		0: "IPv4Unicast",
		1: "IPv6Unicast",
	}
	ObserveRIBRequest_AFISAFI_value = map[string]int32{
		"IPv4Unicast": 0,
		"IPv6Unicast": 1,
	}
)

func (x ObserveRIBRequest_AFISAFI) Enum() *ObserveRIBRequest_AFISAFI {
	p := new(ObserveRIBRequest_AFISAFI)
	*p = x
	return p
}

func (x ObserveRIBRequest_AFISAFI) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObserveRIBRequest_AFISAFI) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes[0].Descriptor()
}

func (ObserveRIBRequest_AFISAFI) Type() protoreflect.EnumType {
	return &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes[0]
}

func (x ObserveRIBRequest_AFISAFI) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObserveRIBRequest_AFISAFI.Descriptor instead.
func (ObserveRIBRequest_AFISAFI) EnumDescriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{6, 0}
}

type DumpRIBRequest_AFISAFI int32

const (
	DumpRIBRequest_IPv4Unicast DumpRIBRequest_AFISAFI = 0
	DumpRIBRequest_IPv6Unicast DumpRIBRequest_AFISAFI = 1
)

// Enum value maps for DumpRIBRequest_AFISAFI.
var (
	DumpRIBRequest_AFISAFI_name = map[int32]string{
		0: "IPv4Unicast",
		1: "IPv6Unicast",
	}
	DumpRIBRequest_AFISAFI_value = map[string]int32{
		"IPv4Unicast": 0,
		"IPv6Unicast": 1,
	}
)

func (x DumpRIBRequest_AFISAFI) Enum() *DumpRIBRequest_AFISAFI {
	p := new(DumpRIBRequest_AFISAFI)
	*p = x
	return p
}

func (x DumpRIBRequest_AFISAFI) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DumpRIBRequest_AFISAFI) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes[1].Descriptor()
}

func (DumpRIBRequest_AFISAFI) Type() protoreflect.EnumType {
	return &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes[1]
}

func (x DumpRIBRequest_AFISAFI) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DumpRIBRequest_AFISAFI.Descriptor instead.
func (DumpRIBRequest_AFISAFI) EnumDescriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{8, 0}
}

type LPMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *LPMRequest) Reset() {
	*x = LPMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LPMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPMRequest) ProtoMessage() {}

func (x *LPMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPMRequest.ProtoReflect.Descriptor instead.
func (*LPMRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{0}
}

func (x *LPMRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *LPMRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *LPMRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type LPMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *LPMResponse) Reset() {
	*x = LPMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LPMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPMResponse) ProtoMessage() {}

func (x *LPMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPMResponse.ProtoReflect.Descriptor instead.
func (*LPMResponse) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{1}
}

func (x *LPMResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *GetRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *GetRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetLongerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *GetLongerRequest) Reset() {
	*x = GetLongerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongerRequest) ProtoMessage() {}

func (x *GetLongerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongerRequest.ProtoReflect.Descriptor instead.
func (*GetLongerRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{4}
}

func (x *GetLongerRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *GetLongerRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *GetLongerRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type GetLongerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetLongerResponse) Reset() {
	*x = GetLongerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongerResponse) ProtoMessage() {}

func (x *GetLongerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongerResponse.ProtoReflect.Descriptor instead.
func (*GetLongerResponse) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{5}
}

func (x *GetLongerResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ObserveRIBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router  string                    `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId   uint64                    `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Afisafi ObserveRIBRequest_AFISAFI `protobuf:"varint,3,opt,name=afisafi,proto3,enum=bio.ris.ObserveRIBRequest_AFISAFI" json:"afisafi,omitempty"`
}

func (x *ObserveRIBRequest) Reset() {
	*x = ObserveRIBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserveRIBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveRIBRequest) ProtoMessage() {}

func (x *ObserveRIBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveRIBRequest.ProtoReflect.Descriptor instead.
func (*ObserveRIBRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{6}
}

func (x *ObserveRIBRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *ObserveRIBRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *ObserveRIBRequest) GetAfisafi() ObserveRIBRequest_AFISAFI {
	if x != nil {
		return x.Afisafi
	}
	return ObserveRIBRequest_IPv4Unicast
}

type RIBUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Advertisement bool        `protobuf:"varint,1,opt,name=advertisement,proto3" json:"advertisement,omitempty"`
	Route         *api1.Route `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *RIBUpdate) Reset() {
	*x = RIBUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RIBUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RIBUpdate) ProtoMessage() {}

func (x *RIBUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RIBUpdate.ProtoReflect.Descriptor instead.
func (*RIBUpdate) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{7}
}

func (x *RIBUpdate) GetAdvertisement() bool {
	if x != nil {
		return x.Advertisement
	}
	return false
}

func (x *RIBUpdate) GetRoute() *api1.Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type DumpRIBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router  string                 `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId   uint64                 `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Afisafi DumpRIBRequest_AFISAFI `protobuf:"varint,3,opt,name=afisafi,proto3,enum=bio.ris.DumpRIBRequest_AFISAFI" json:"afisafi,omitempty"`
}

func (x *DumpRIBRequest) Reset() {
	*x = DumpRIBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpRIBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRIBRequest) ProtoMessage() {}

func (x *DumpRIBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRIBRequest.ProtoReflect.Descriptor instead.
func (*DumpRIBRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{8}
}

func (x *DumpRIBRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *DumpRIBRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *DumpRIBRequest) GetAfisafi() DumpRIBRequest_AFISAFI {
	if x != nil {
		return x.Afisafi
	}
	return DumpRIBRequest_IPv4Unicast
}

type DumpRIBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route *api1.Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *DumpRIBReply) Reset() {
	*x = DumpRIBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpRIBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRIBReply) ProtoMessage() {}

func (x *DumpRIBReply) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRIBReply.ProtoReflect.Descriptor instead.
func (*DumpRIBReply) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{9}
}

func (x *DumpRIBReply) GetRoute() *api1.Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type GetRoutersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRoutersRequest) Reset() {
	*x = GetRoutersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutersRequest) ProtoMessage() {}

func (x *GetRoutersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutersRequest.ProtoReflect.Descriptor instead.
func (*GetRoutersRequest) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{10}
}

type Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string   `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfIds []uint64 `protobuf:"varint,2,rep,packed,name=vrf_ids,json=vrfIds,proto3" json:"vrf_ids,omitempty"`
}

func (x *Router) Reset() {
	*x = Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{11}
}

func (x *Router) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *Router) GetVrfIds() []uint64 {
	if x != nil {
		return x.VrfIds
	}
	return nil
}

type GetRoutersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routers []*Router `protobuf:"bytes,1,rep,name=routers,proto3" json:"routers,omitempty"`
}

func (x *GetRoutersResponse) Reset() {
	*x = GetRoutersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutersResponse) ProtoMessage() {}

func (x *GetRoutersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutersResponse.ProtoReflect.Descriptor instead.
func (*GetRoutersResponse) Descriptor() ([]byte, []int) {
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoutersResponse) GetRouters() []*Router {
	if x != nil {
		return x.Routers
	}
	return nil
}

var File_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto protoreflect.FileDescriptor

var file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDesc = []byte{
	0x0a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f,
	0x2d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f,
	0x63, 0x6d, 0x64, 0x2f, 0x72, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x1a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f, 0x6e, 0x65,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f, 0x2d,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x0a, 0x4c, 0x50, 0x4d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72,
	0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52,
	0x03, 0x70, 0x66, 0x78, 0x22, 0x37, 0x0a, 0x0b, 0x4c, 0x50, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x5e, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65,
	0x74, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x03, 0x70, 0x66, 0x78, 0x22, 0x37, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62,
	0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e,
	0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x03, 0x70, 0x66, 0x78, 0x22, 0x3d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x11,
	0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x46,
	0x49, 0x53, 0x41, 0x46, 0x49, 0x52, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x22, 0x2b,
	0x0a, 0x07, 0x41, 0x46, 0x49, 0x53, 0x41, 0x46, 0x49, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76,
	0x34, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50,
	0x76, 0x36, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x10, 0x01, 0x22, 0x59, 0x0a, 0x09, 0x52,
	0x49, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65,
	0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x44, 0x75, 0x6d, 0x70, 0x52,
	0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x07, 0x61, 0x66, 0x69, 0x73,
	0x61, 0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6f, 0x2e,
	0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x41, 0x46, 0x49, 0x53, 0x41, 0x46, 0x49, 0x52, 0x07, 0x61, 0x66, 0x69, 0x73,
	0x61, 0x66, 0x69, 0x22, 0x2b, 0x0a, 0x07, 0x41, 0x46, 0x49, 0x53, 0x41, 0x46, 0x49, 0x12, 0x0f,
	0x0a, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x10, 0x00, 0x12,
	0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x36, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74, 0x10, 0x01,
	0x22, 0x36, 0x0a, 0x0c, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x39, 0x0a,
	0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12,
	0x17, 0x0a, 0x07, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x06, 0x76, 0x72, 0x66, 0x49, 0x64, 0x73, 0x22, 0x3f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x32, 0x8f, 0x03, 0x0a, 0x19, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x4c, 0x50, 0x4d, 0x12, 0x13,
	0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x50, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x50,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x13, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e,
	0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x69, 0x6f, 0x2e,
	0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0a, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x49, 0x42, 0x12, 0x1a, 0x2e, 0x62,
	0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x49,
	0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72,
	0x69, 0x73, 0x2e, 0x52, 0x49, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x3b,
	0x0a, 0x07, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x12, 0x17, 0x2e, 0x62, 0x69, 0x6f, 0x2e,
	0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d,
	0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f, 0x63, 0x6d, 0x64,
	0x2f, 0x72, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescOnce sync.Once
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescData = file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDesc
)

func file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescGZIP() []byte {
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescOnce.Do(func() {
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescData)
	})
	return file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDescData
}

var file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_goTypes = []interface{}{
	(ObserveRIBRequest_AFISAFI)(0), // 0: bio.ris.ObserveRIBRequest.AFISAFI
	(DumpRIBRequest_AFISAFI)(0),    // 1: bio.ris.DumpRIBRequest.AFISAFI
	(*LPMRequest)(nil),             // 2: bio.ris.LPMRequest
	(*LPMResponse)(nil),            // 3: bio.ris.LPMResponse
	(*GetRequest)(nil),             // 4: bio.ris.GetRequest
	(*GetResponse)(nil),            // 5: bio.ris.GetResponse
	(*GetLongerRequest)(nil),       // 6: bio.ris.GetLongerRequest
	(*GetLongerResponse)(nil),      // 7: bio.ris.GetLongerResponse
	(*ObserveRIBRequest)(nil),      // 8: bio.ris.ObserveRIBRequest
	(*RIBUpdate)(nil),              // 9: bio.ris.RIBUpdate
	(*DumpRIBRequest)(nil),         // 10: bio.ris.DumpRIBRequest
	(*DumpRIBReply)(nil),           // 11: bio.ris.DumpRIBReply
	(*GetRoutersRequest)(nil),      // 12: bio.ris.GetRoutersRequest
	(*Router)(nil),                 // 13: bio.ris.Router
	(*GetRoutersResponse)(nil),     // 14: bio.ris.GetRoutersResponse
	(*api.Prefix)(nil),             // 15: bio.net.Prefix
	(*api1.Route)(nil),             // 16: bio.route.Route
}
var file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_depIdxs = []int32{
	15, // 0: bio.ris.LPMRequest.pfx:type_name -> bio.net.Prefix
	16, // 1: bio.ris.LPMResponse.routes:type_name -> bio.route.Route
	15, // 2: bio.ris.GetRequest.pfx:type_name -> bio.net.Prefix
	16, // 3: bio.ris.GetResponse.routes:type_name -> bio.route.Route
	15, // 4: bio.ris.GetLongerRequest.pfx:type_name -> bio.net.Prefix
	16, // 5: bio.ris.GetLongerResponse.routes:type_name -> bio.route.Route
	0,  // 6: bio.ris.ObserveRIBRequest.afisafi:type_name -> bio.ris.ObserveRIBRequest.AFISAFI
	16, // 7: bio.ris.RIBUpdate.route:type_name -> bio.route.Route
	1,  // 8: bio.ris.DumpRIBRequest.afisafi:type_name -> bio.ris.DumpRIBRequest.AFISAFI
	16, // 9: bio.ris.DumpRIBReply.route:type_name -> bio.route.Route
	13, // 10: bio.ris.GetRoutersResponse.routers:type_name -> bio.ris.Router
	2,  // 11: bio.ris.RoutingInformationService.LPM:input_type -> bio.ris.LPMRequest
	4,  // 12: bio.ris.RoutingInformationService.Get:input_type -> bio.ris.GetRequest
	12, // 13: bio.ris.RoutingInformationService.GetRouters:input_type -> bio.ris.GetRoutersRequest
	6,  // 14: bio.ris.RoutingInformationService.GetLonger:input_type -> bio.ris.GetLongerRequest
	8,  // 15: bio.ris.RoutingInformationService.ObserveRIB:input_type -> bio.ris.ObserveRIBRequest
	10, // 16: bio.ris.RoutingInformationService.DumpRIB:input_type -> bio.ris.DumpRIBRequest
	3,  // 17: bio.ris.RoutingInformationService.LPM:output_type -> bio.ris.LPMResponse
	5,  // 18: bio.ris.RoutingInformationService.Get:output_type -> bio.ris.GetResponse
	14, // 19: bio.ris.RoutingInformationService.GetRouters:output_type -> bio.ris.GetRoutersResponse
	7,  // 20: bio.ris.RoutingInformationService.GetLonger:output_type -> bio.ris.GetLongerResponse
	9,  // 21: bio.ris.RoutingInformationService.ObserveRIB:output_type -> bio.ris.RIBUpdate
	11, // 22: bio.ris.RoutingInformationService.DumpRIB:output_type -> bio.ris.DumpRIBReply
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_init() }
func file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_init() {
	if File_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LPMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LPMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserveRIBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RIBUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpRIBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpRIBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_goTypes,
		DependencyIndexes: file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_depIdxs,
		EnumInfos:         file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_enumTypes,
		MessageInfos:      file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_msgTypes,
	}.Build()
	File_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto = out.File
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_rawDesc = nil
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_goTypes = nil
	file_github_com_bio_routing_bio_rd_cmd_ris_api_ris_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoutingInformationServiceClient is the client API for RoutingInformationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoutingInformationServiceClient interface {
	LPM(ctx context.Context, in *LPMRequest, opts ...grpc.CallOption) (*LPMResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	GetRouters(ctx context.Context, in *GetRoutersRequest, opts ...grpc.CallOption) (*GetRoutersResponse, error)
	GetLonger(ctx context.Context, in *GetLongerRequest, opts ...grpc.CallOption) (*GetLongerResponse, error)
	ObserveRIB(ctx context.Context, in *ObserveRIBRequest, opts ...grpc.CallOption) (RoutingInformationService_ObserveRIBClient, error)
	DumpRIB(ctx context.Context, in *DumpRIBRequest, opts ...grpc.CallOption) (RoutingInformationService_DumpRIBClient, error)
}

type routingInformationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoutingInformationServiceClient(cc grpc.ClientConnInterface) RoutingInformationServiceClient {
	return &routingInformationServiceClient{cc}
}

func (c *routingInformationServiceClient) LPM(ctx context.Context, in *LPMRequest, opts ...grpc.CallOption) (*LPMResponse, error) {
	out := new(LPMResponse)
	err := c.cc.Invoke(ctx, "/bio.ris.RoutingInformationService/LPM", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInformationServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/bio.ris.RoutingInformationService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInformationServiceClient) GetRouters(ctx context.Context, in *GetRoutersRequest, opts ...grpc.CallOption) (*GetRoutersResponse, error) {
	out := new(GetRoutersResponse)
	err := c.cc.Invoke(ctx, "/bio.ris.RoutingInformationService/GetRouters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInformationServiceClient) GetLonger(ctx context.Context, in *GetLongerRequest, opts ...grpc.CallOption) (*GetLongerResponse, error) {
	out := new(GetLongerResponse)
	err := c.cc.Invoke(ctx, "/bio.ris.RoutingInformationService/GetLonger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routingInformationServiceClient) ObserveRIB(ctx context.Context, in *ObserveRIBRequest, opts ...grpc.CallOption) (RoutingInformationService_ObserveRIBClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoutingInformationService_serviceDesc.Streams[0], "/bio.ris.RoutingInformationService/ObserveRIB", opts...)
	if err != nil {
		return nil, err
	}
	x := &routingInformationServiceObserveRIBClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RoutingInformationService_ObserveRIBClient interface {
	Recv() (*RIBUpdate, error)
	grpc.ClientStream
}

type routingInformationServiceObserveRIBClient struct {
	grpc.ClientStream
}

func (x *routingInformationServiceObserveRIBClient) Recv() (*RIBUpdate, error) {
	m := new(RIBUpdate)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *routingInformationServiceClient) DumpRIB(ctx context.Context, in *DumpRIBRequest, opts ...grpc.CallOption) (RoutingInformationService_DumpRIBClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RoutingInformationService_serviceDesc.Streams[1], "/bio.ris.RoutingInformationService/DumpRIB", opts...)
	if err != nil {
		return nil, err
	}
	x := &routingInformationServiceDumpRIBClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RoutingInformationService_DumpRIBClient interface {
	Recv() (*DumpRIBReply, error)
	grpc.ClientStream
}

type routingInformationServiceDumpRIBClient struct {
	grpc.ClientStream
}

func (x *routingInformationServiceDumpRIBClient) Recv() (*DumpRIBReply, error) {
	m := new(DumpRIBReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RoutingInformationServiceServer is the server API for RoutingInformationService service.
type RoutingInformationServiceServer interface {
	LPM(context.Context, *LPMRequest) (*LPMResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	GetRouters(context.Context, *GetRoutersRequest) (*GetRoutersResponse, error)
	GetLonger(context.Context, *GetLongerRequest) (*GetLongerResponse, error)
	ObserveRIB(*ObserveRIBRequest, RoutingInformationService_ObserveRIBServer) error
	DumpRIB(*DumpRIBRequest, RoutingInformationService_DumpRIBServer) error
}

// UnimplementedRoutingInformationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoutingInformationServiceServer struct {
}

func (*UnimplementedRoutingInformationServiceServer) LPM(context.Context, *LPMRequest) (*LPMResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LPM not implemented")
}
func (*UnimplementedRoutingInformationServiceServer) Get(context.Context, *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRoutingInformationServiceServer) GetRouters(context.Context, *GetRoutersRequest) (*GetRoutersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRouters not implemented")
}
func (*UnimplementedRoutingInformationServiceServer) GetLonger(context.Context, *GetLongerRequest) (*GetLongerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLonger not implemented")
}
func (*UnimplementedRoutingInformationServiceServer) ObserveRIB(*ObserveRIBRequest, RoutingInformationService_ObserveRIBServer) error {
	return status.Errorf(codes.Unimplemented, "method ObserveRIB not implemented")
}
func (*UnimplementedRoutingInformationServiceServer) DumpRIB(*DumpRIBRequest, RoutingInformationService_DumpRIBServer) error {
	return status.Errorf(codes.Unimplemented, "method DumpRIB not implemented")
}

func RegisterRoutingInformationServiceServer(s *grpc.Server, srv RoutingInformationServiceServer) {
	s.RegisterService(&_RoutingInformationService_serviceDesc, srv)
}

func _RoutingInformationService_LPM_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LPMRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInformationServiceServer).LPM(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bio.ris.RoutingInformationService/LPM",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInformationServiceServer).LPM(ctx, req.(*LPMRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInformationService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInformationServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bio.ris.RoutingInformationService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInformationServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInformationService_GetRouters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRoutersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInformationServiceServer).GetRouters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bio.ris.RoutingInformationService/GetRouters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInformationServiceServer).GetRouters(ctx, req.(*GetRoutersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInformationService_GetLonger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLongerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoutingInformationServiceServer).GetLonger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bio.ris.RoutingInformationService/GetLonger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoutingInformationServiceServer).GetLonger(ctx, req.(*GetLongerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoutingInformationService_ObserveRIB_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ObserveRIBRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RoutingInformationServiceServer).ObserveRIB(m, &routingInformationServiceObserveRIBServer{stream})
}

type RoutingInformationService_ObserveRIBServer interface {
	Send(*RIBUpdate) error
	grpc.ServerStream
}

type routingInformationServiceObserveRIBServer struct {
	grpc.ServerStream
}

func (x *routingInformationServiceObserveRIBServer) Send(m *RIBUpdate) error {
	return x.ServerStream.SendMsg(m)
}

func _RoutingInformationService_DumpRIB_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DumpRIBRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RoutingInformationServiceServer).DumpRIB(m, &routingInformationServiceDumpRIBServer{stream})
}

type RoutingInformationService_DumpRIBServer interface {
	Send(*DumpRIBReply) error
	grpc.ServerStream
}

type routingInformationServiceDumpRIBServer struct {
	grpc.ServerStream
}

func (x *routingInformationServiceDumpRIBServer) Send(m *DumpRIBReply) error {
	return x.ServerStream.SendMsg(m)
}

var _RoutingInformationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bio.ris.RoutingInformationService",
	HandlerType: (*RoutingInformationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LPM",
			Handler:    _RoutingInformationService_LPM_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _RoutingInformationService_Get_Handler,
		},
		{
			MethodName: "GetRouters",
			Handler:    _RoutingInformationService_GetRouters_Handler,
		},
		{
			MethodName: "GetLonger",
			Handler:    _RoutingInformationService_GetLonger_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ObserveRIB",
			Handler:       _RoutingInformationService_ObserveRIB_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DumpRIB",
			Handler:       _RoutingInformationService_DumpRIB_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/bio-routing/bio-rd/cmd/ris/api/ris.proto",
}
