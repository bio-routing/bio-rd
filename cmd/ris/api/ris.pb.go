// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: cmd/ris/api/ris.proto

package api

import (
	api "github.com/bio-routing/bio-rd/net/api"
	api1 "github.com/bio-routing/bio-rd/route/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObserveRIBRequest_AFISAFI int32

const (
	ObserveRIBRequest_IPv4Unicast ObserveRIBRequest_AFISAFI = 0
	ObserveRIBRequest_IPv6Unicast ObserveRIBRequest_AFISAFI = 1
)

// Enum value maps for ObserveRIBRequest_AFISAFI.
var (
	ObserveRIBRequest_AFISAFI_name = map[int32]string{
		0: "IPv4Unicast",
		1: "IPv6Unicast",
	}
	ObserveRIBRequest_AFISAFI_value = map[string]int32{
		"IPv4Unicast": 0,
		"IPv6Unicast": 1,
	}
)

func (x ObserveRIBRequest_AFISAFI) Enum() *ObserveRIBRequest_AFISAFI {
	p := new(ObserveRIBRequest_AFISAFI)
	*p = x
	return p
}

func (x ObserveRIBRequest_AFISAFI) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObserveRIBRequest_AFISAFI) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_ris_api_ris_proto_enumTypes[0].Descriptor()
}

func (ObserveRIBRequest_AFISAFI) Type() protoreflect.EnumType {
	return &file_cmd_ris_api_ris_proto_enumTypes[0]
}

func (x ObserveRIBRequest_AFISAFI) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObserveRIBRequest_AFISAFI.Descriptor instead.
func (ObserveRIBRequest_AFISAFI) EnumDescriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{6, 0}
}

type DumpRIBRequest_AFISAFI int32

const (
	DumpRIBRequest_IPv4Unicast DumpRIBRequest_AFISAFI = 0
	DumpRIBRequest_IPv6Unicast DumpRIBRequest_AFISAFI = 1
)

// Enum value maps for DumpRIBRequest_AFISAFI.
var (
	DumpRIBRequest_AFISAFI_name = map[int32]string{
		0: "IPv4Unicast",
		1: "IPv6Unicast",
	}
	DumpRIBRequest_AFISAFI_value = map[string]int32{
		"IPv4Unicast": 0,
		"IPv6Unicast": 1,
	}
)

func (x DumpRIBRequest_AFISAFI) Enum() *DumpRIBRequest_AFISAFI {
	p := new(DumpRIBRequest_AFISAFI)
	*p = x
	return p
}

func (x DumpRIBRequest_AFISAFI) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DumpRIBRequest_AFISAFI) Descriptor() protoreflect.EnumDescriptor {
	return file_cmd_ris_api_ris_proto_enumTypes[1].Descriptor()
}

func (DumpRIBRequest_AFISAFI) Type() protoreflect.EnumType {
	return &file_cmd_ris_api_ris_proto_enumTypes[1]
}

func (x DumpRIBRequest_AFISAFI) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DumpRIBRequest_AFISAFI.Descriptor instead.
func (DumpRIBRequest_AFISAFI) EnumDescriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{9, 0}
}

type LPMRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Vrf    string      `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *LPMRequest) Reset() {
	*x = LPMRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LPMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPMRequest) ProtoMessage() {}

func (x *LPMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPMRequest.ProtoReflect.Descriptor instead.
func (*LPMRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{0}
}

func (x *LPMRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *LPMRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *LPMRequest) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *LPMRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type LPMResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *LPMResponse) Reset() {
	*x = LPMResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LPMResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LPMResponse) ProtoMessage() {}

func (x *LPMResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LPMResponse.ProtoReflect.Descriptor instead.
func (*LPMResponse) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{1}
}

func (x *LPMResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Vrf    string      `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *GetRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *GetRequest) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *GetRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type GetLongerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router string      `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId  uint64      `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Vrf    string      `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Pfx    *api.Prefix `protobuf:"bytes,3,opt,name=pfx,proto3" json:"pfx,omitempty"`
}

func (x *GetLongerRequest) Reset() {
	*x = GetLongerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongerRequest) ProtoMessage() {}

func (x *GetLongerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongerRequest.ProtoReflect.Descriptor instead.
func (*GetLongerRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{4}
}

func (x *GetLongerRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *GetLongerRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *GetLongerRequest) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *GetLongerRequest) GetPfx() *api.Prefix {
	if x != nil {
		return x.Pfx
	}
	return nil
}

type GetLongerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes []*api1.Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *GetLongerResponse) Reset() {
	*x = GetLongerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLongerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLongerResponse) ProtoMessage() {}

func (x *GetLongerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLongerResponse.ProtoReflect.Descriptor instead.
func (*GetLongerResponse) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{5}
}

func (x *GetLongerResponse) GetRoutes() []*api1.Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

type ObserveRIBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router          string                    `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId           uint64                    `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Vrf             string                    `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Afisafi         ObserveRIBRequest_AFISAFI `protobuf:"varint,3,opt,name=afisafi,proto3,enum=bio.ris.ObserveRIBRequest_AFISAFI" json:"afisafi,omitempty"`
	AllowUnreadyRib bool                      `protobuf:"varint,5,opt,name=allow_unready_rib,json=allowUnreadyRib,proto3" json:"allow_unready_rib,omitempty"`
}

func (x *ObserveRIBRequest) Reset() {
	*x = ObserveRIBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObserveRIBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObserveRIBRequest) ProtoMessage() {}

func (x *ObserveRIBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObserveRIBRequest.ProtoReflect.Descriptor instead.
func (*ObserveRIBRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{6}
}

func (x *ObserveRIBRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *ObserveRIBRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *ObserveRIBRequest) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *ObserveRIBRequest) GetAfisafi() ObserveRIBRequest_AFISAFI {
	if x != nil {
		return x.Afisafi
	}
	return ObserveRIBRequest_IPv4Unicast
}

func (x *ObserveRIBRequest) GetAllowUnreadyRib() bool {
	if x != nil {
		return x.AllowUnreadyRib
	}
	return false
}

type RIBFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginatingAsn uint32 `protobuf:"varint,1,opt,name=originating_asn,json=originatingAsn,proto3" json:"originating_asn,omitempty"`
	MinLength      uint32 `protobuf:"varint,2,opt,name=min_length,json=minLength,proto3" json:"min_length,omitempty"`
	MaxLength      uint32 `protobuf:"varint,3,opt,name=max_length,json=maxLength,proto3" json:"max_length,omitempty"`
}

func (x *RIBFilter) Reset() {
	*x = RIBFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RIBFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RIBFilter) ProtoMessage() {}

func (x *RIBFilter) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RIBFilter.ProtoReflect.Descriptor instead.
func (*RIBFilter) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{7}
}

func (x *RIBFilter) GetOriginatingAsn() uint32 {
	if x != nil {
		return x.OriginatingAsn
	}
	return 0
}

func (x *RIBFilter) GetMinLength() uint32 {
	if x != nil {
		return x.MinLength
	}
	return 0
}

func (x *RIBFilter) GetMaxLength() uint32 {
	if x != nil {
		return x.MaxLength
	}
	return 0
}

type RIBUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Advertisement bool        `protobuf:"varint,1,opt,name=advertisement,proto3" json:"advertisement,omitempty"`
	IsInitialDump bool        `protobuf:"varint,3,opt,name=is_initial_dump,json=isInitialDump,proto3" json:"is_initial_dump,omitempty"`
	EndOfRib      bool        `protobuf:"varint,4,opt,name=end_of_rib,json=endOfRib,proto3" json:"end_of_rib,omitempty"`
	Route         *api1.Route `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *RIBUpdate) Reset() {
	*x = RIBUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RIBUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RIBUpdate) ProtoMessage() {}

func (x *RIBUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RIBUpdate.ProtoReflect.Descriptor instead.
func (*RIBUpdate) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{8}
}

func (x *RIBUpdate) GetAdvertisement() bool {
	if x != nil {
		return x.Advertisement
	}
	return false
}

func (x *RIBUpdate) GetIsInitialDump() bool {
	if x != nil {
		return x.IsInitialDump
	}
	return false
}

func (x *RIBUpdate) GetEndOfRib() bool {
	if x != nil {
		return x.EndOfRib
	}
	return false
}

func (x *RIBUpdate) GetRoute() *api1.Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type DumpRIBRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Router  string                 `protobuf:"bytes,1,opt,name=router,proto3" json:"router,omitempty"`
	VrfId   uint64                 `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	Vrf     string                 `protobuf:"bytes,4,opt,name=vrf,proto3" json:"vrf,omitempty"`
	Afisafi DumpRIBRequest_AFISAFI `protobuf:"varint,3,opt,name=afisafi,proto3,enum=bio.ris.DumpRIBRequest_AFISAFI" json:"afisafi,omitempty"`
	Filter  *RIBFilter             `protobuf:"bytes,5,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *DumpRIBRequest) Reset() {
	*x = DumpRIBRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpRIBRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRIBRequest) ProtoMessage() {}

func (x *DumpRIBRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRIBRequest.ProtoReflect.Descriptor instead.
func (*DumpRIBRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{9}
}

func (x *DumpRIBRequest) GetRouter() string {
	if x != nil {
		return x.Router
	}
	return ""
}

func (x *DumpRIBRequest) GetVrfId() uint64 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *DumpRIBRequest) GetVrf() string {
	if x != nil {
		return x.Vrf
	}
	return ""
}

func (x *DumpRIBRequest) GetAfisafi() DumpRIBRequest_AFISAFI {
	if x != nil {
		return x.Afisafi
	}
	return DumpRIBRequest_IPv4Unicast
}

func (x *DumpRIBRequest) GetFilter() *RIBFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DumpRIBReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route *api1.Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
}

func (x *DumpRIBReply) Reset() {
	*x = DumpRIBReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DumpRIBReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DumpRIBReply) ProtoMessage() {}

func (x *DumpRIBReply) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DumpRIBReply.ProtoReflect.Descriptor instead.
func (*DumpRIBReply) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{10}
}

func (x *DumpRIBReply) GetRoute() *api1.Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type GetRoutersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRoutersRequest) Reset() {
	*x = GetRoutersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutersRequest) ProtoMessage() {}

func (x *GetRoutersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutersRequest.ProtoReflect.Descriptor instead.
func (*GetRoutersRequest) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{11}
}

type Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysName string   `protobuf:"bytes,1,opt,name=sys_name,json=sysName,proto3" json:"sys_name,omitempty"`
	VrfIds  []uint64 `protobuf:"varint,2,rep,packed,name=vrf_ids,json=vrfIds,proto3" json:"vrf_ids,omitempty"`
	Address string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Router) Reset() {
	*x = Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Router) ProtoMessage() {}

func (x *Router) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Router.ProtoReflect.Descriptor instead.
func (*Router) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{12}
}

func (x *Router) GetSysName() string {
	if x != nil {
		return x.SysName
	}
	return ""
}

func (x *Router) GetVrfIds() []uint64 {
	if x != nil {
		return x.VrfIds
	}
	return nil
}

func (x *Router) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetRoutersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routers []*Router `protobuf:"bytes,1,rep,name=routers,proto3" json:"routers,omitempty"`
}

func (x *GetRoutersResponse) Reset() {
	*x = GetRoutersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cmd_ris_api_ris_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoutersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoutersResponse) ProtoMessage() {}

func (x *GetRoutersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cmd_ris_api_ris_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoutersResponse.ProtoReflect.Descriptor instead.
func (*GetRoutersResponse) Descriptor() ([]byte, []int) {
	return file_cmd_ris_api_ris_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoutersResponse) GetRouters() []*Router {
	if x != nil {
		return x.Routers
	}
	return nil
}

var File_cmd_ris_api_ris_proto protoreflect.FileDescriptor

var file_cmd_ris_api_ris_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6d, 0x64, 0x2f, 0x72, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73,
	0x1a, 0x11, 0x6e, 0x65, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x0a, 0x4c, 0x50,
	0x4d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x72, 0x66, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x03, 0x70, 0x66, 0x78, 0x22, 0x37, 0x0a, 0x0b,
	0x4c, 0x50, 0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69,
	0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76,
	0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x76, 0x72, 0x66, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x52, 0x03, 0x70, 0x66, 0x78, 0x22, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x22, 0x76, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06,
	0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72,
	0x66, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x72, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x76, 0x72, 0x66, 0x12, 0x21, 0x0a, 0x03, 0x70, 0x66, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x52, 0x03, 0x70, 0x66, 0x78, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x11, 0x4f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x76, 0x72, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x72, 0x66, 0x12, 0x3c,
	0x0a, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x46, 0x49, 0x53,
	0x41, 0x46, 0x49, 0x52, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x69,
	0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x52, 0x69, 0x62, 0x22, 0x2b, 0x0a, 0x07, 0x41, 0x46, 0x49, 0x53,
	0x41, 0x46, 0x49, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x55, 0x6e, 0x69, 0x63, 0x61,
	0x73, 0x74, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x36, 0x55, 0x6e, 0x69, 0x63,
	0x61, 0x73, 0x74, 0x10, 0x01, 0x22, 0x72, 0x0a, 0x09, 0x52, 0x49, 0x42, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x73, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6d, 0x69, 0x6e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x9f, 0x01, 0x0a, 0x09, 0x52, 0x49,
	0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x64, 0x75, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x44, 0x75, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x66, 0x5f,
	0x72, 0x69, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x4f, 0x66,
	0x52, 0x69, 0x62, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x0e,
	0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x76, 0x72, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x72, 0x66, 0x12,
	0x39, 0x0a, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x52,
	0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x46, 0x49, 0x53, 0x41, 0x46,
	0x49, 0x52, 0x07, 0x61, 0x66, 0x69, 0x73, 0x61, 0x66, 0x69, 0x12, 0x2a, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x69, 0x6f,
	0x2e, 0x72, 0x69, 0x73, 0x2e, 0x52, 0x49, 0x42, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x07, 0x41, 0x46, 0x49, 0x53, 0x41, 0x46,
	0x49, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x34, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73, 0x74,
	0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x50, 0x76, 0x36, 0x55, 0x6e, 0x69, 0x63, 0x61, 0x73,
	0x74, 0x10, 0x01, 0x22, 0x36, 0x0a, 0x0c, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x56, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x79,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52, 0x06, 0x76, 0x72, 0x66, 0x49, 0x64, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x32, 0x8f, 0x03, 0x0a, 0x19, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x03, 0x4c, 0x50, 0x4d, 0x12, 0x13,
	0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x50, 0x4d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4c, 0x50,
	0x4d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x13, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x2e,
	0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x69, 0x6f, 0x2e,
	0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c,
	0x6f, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x6f, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x0a, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x49, 0x42, 0x12, 0x1a, 0x2e, 0x62,
	0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x52, 0x49,
	0x42, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72,
	0x69, 0x73, 0x2e, 0x52, 0x49, 0x42, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x30, 0x01, 0x12, 0x3b,
	0x0a, 0x07, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x12, 0x17, 0x2e, 0x62, 0x69, 0x6f, 0x2e,
	0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d, 0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x69, 0x73, 0x2e, 0x44, 0x75, 0x6d,
	0x70, 0x52, 0x49, 0x42, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x30, 0x01, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f, 0x63, 0x6d, 0x64,
	0x2f, 0x72, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cmd_ris_api_ris_proto_rawDescOnce sync.Once
	file_cmd_ris_api_ris_proto_rawDescData = file_cmd_ris_api_ris_proto_rawDesc
)

func file_cmd_ris_api_ris_proto_rawDescGZIP() []byte {
	file_cmd_ris_api_ris_proto_rawDescOnce.Do(func() {
		file_cmd_ris_api_ris_proto_rawDescData = protoimpl.X.CompressGZIP(file_cmd_ris_api_ris_proto_rawDescData)
	})
	return file_cmd_ris_api_ris_proto_rawDescData
}

var file_cmd_ris_api_ris_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_cmd_ris_api_ris_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cmd_ris_api_ris_proto_goTypes = []interface{}{
	(ObserveRIBRequest_AFISAFI)(0), // 0: bio.ris.ObserveRIBRequest.AFISAFI
	(DumpRIBRequest_AFISAFI)(0),    // 1: bio.ris.DumpRIBRequest.AFISAFI
	(*LPMRequest)(nil),             // 2: bio.ris.LPMRequest
	(*LPMResponse)(nil),            // 3: bio.ris.LPMResponse
	(*GetRequest)(nil),             // 4: bio.ris.GetRequest
	(*GetResponse)(nil),            // 5: bio.ris.GetResponse
	(*GetLongerRequest)(nil),       // 6: bio.ris.GetLongerRequest
	(*GetLongerResponse)(nil),      // 7: bio.ris.GetLongerResponse
	(*ObserveRIBRequest)(nil),      // 8: bio.ris.ObserveRIBRequest
	(*RIBFilter)(nil),              // 9: bio.ris.RIBFilter
	(*RIBUpdate)(nil),              // 10: bio.ris.RIBUpdate
	(*DumpRIBRequest)(nil),         // 11: bio.ris.DumpRIBRequest
	(*DumpRIBReply)(nil),           // 12: bio.ris.DumpRIBReply
	(*GetRoutersRequest)(nil),      // 13: bio.ris.GetRoutersRequest
	(*Router)(nil),                 // 14: bio.ris.Router
	(*GetRoutersResponse)(nil),     // 15: bio.ris.GetRoutersResponse
	(*api.Prefix)(nil),             // 16: bio.net.Prefix
	(*api1.Route)(nil),             // 17: bio.route.Route
}
var file_cmd_ris_api_ris_proto_depIdxs = []int32{
	16, // 0: bio.ris.LPMRequest.pfx:type_name -> bio.net.Prefix
	17, // 1: bio.ris.LPMResponse.routes:type_name -> bio.route.Route
	16, // 2: bio.ris.GetRequest.pfx:type_name -> bio.net.Prefix
	17, // 3: bio.ris.GetResponse.routes:type_name -> bio.route.Route
	16, // 4: bio.ris.GetLongerRequest.pfx:type_name -> bio.net.Prefix
	17, // 5: bio.ris.GetLongerResponse.routes:type_name -> bio.route.Route
	0,  // 6: bio.ris.ObserveRIBRequest.afisafi:type_name -> bio.ris.ObserveRIBRequest.AFISAFI
	17, // 7: bio.ris.RIBUpdate.route:type_name -> bio.route.Route
	1,  // 8: bio.ris.DumpRIBRequest.afisafi:type_name -> bio.ris.DumpRIBRequest.AFISAFI
	9,  // 9: bio.ris.DumpRIBRequest.filter:type_name -> bio.ris.RIBFilter
	17, // 10: bio.ris.DumpRIBReply.route:type_name -> bio.route.Route
	14, // 11: bio.ris.GetRoutersResponse.routers:type_name -> bio.ris.Router
	2,  // 12: bio.ris.RoutingInformationService.LPM:input_type -> bio.ris.LPMRequest
	4,  // 13: bio.ris.RoutingInformationService.Get:input_type -> bio.ris.GetRequest
	13, // 14: bio.ris.RoutingInformationService.GetRouters:input_type -> bio.ris.GetRoutersRequest
	6,  // 15: bio.ris.RoutingInformationService.GetLonger:input_type -> bio.ris.GetLongerRequest
	8,  // 16: bio.ris.RoutingInformationService.ObserveRIB:input_type -> bio.ris.ObserveRIBRequest
	11, // 17: bio.ris.RoutingInformationService.DumpRIB:input_type -> bio.ris.DumpRIBRequest
	3,  // 18: bio.ris.RoutingInformationService.LPM:output_type -> bio.ris.LPMResponse
	5,  // 19: bio.ris.RoutingInformationService.Get:output_type -> bio.ris.GetResponse
	15, // 20: bio.ris.RoutingInformationService.GetRouters:output_type -> bio.ris.GetRoutersResponse
	7,  // 21: bio.ris.RoutingInformationService.GetLonger:output_type -> bio.ris.GetLongerResponse
	10, // 22: bio.ris.RoutingInformationService.ObserveRIB:output_type -> bio.ris.RIBUpdate
	12, // 23: bio.ris.RoutingInformationService.DumpRIB:output_type -> bio.ris.DumpRIBReply
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_cmd_ris_api_ris_proto_init() }
func file_cmd_ris_api_ris_proto_init() {
	if File_cmd_ris_api_ris_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cmd_ris_api_ris_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LPMRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LPMResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLongerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObserveRIBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RIBFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RIBUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpRIBRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DumpRIBReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cmd_ris_api_ris_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRoutersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cmd_ris_api_ris_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cmd_ris_api_ris_proto_goTypes,
		DependencyIndexes: file_cmd_ris_api_ris_proto_depIdxs,
		EnumInfos:         file_cmd_ris_api_ris_proto_enumTypes,
		MessageInfos:      file_cmd_ris_api_ris_proto_msgTypes,
	}.Build()
	File_cmd_ris_api_ris_proto = out.File
	file_cmd_ris_api_ris_proto_rawDesc = nil
	file_cmd_ris_api_ris_proto_goTypes = nil
	file_cmd_ris_api_ris_proto_depIdxs = nil
}
