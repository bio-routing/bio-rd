// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: protocols/vamp/api/vamp.proto

package api

import (
	_ "github.com/bio-routing/bio-rd/net/api"
	api "github.com/bio-routing/bio-rd/route/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VAMPMessage_MessageType int32

const (
	VAMPMessage_VRF_INFO   VAMPMessage_MessageType = 0
	VAMPMessage_ROUTE_INFO VAMPMessage_MessageType = 1
	VAMPMessage_END_OF_RIB VAMPMessage_MessageType = 2
)

// Enum value maps for VAMPMessage_MessageType.
var (
	VAMPMessage_MessageType_name = map[int32]string{
		0: "VRF_INFO",
		1: "ROUTE_INFO",
		2: "END_OF_RIB",
	}
	VAMPMessage_MessageType_value = map[string]int32{
		"VRF_INFO":   0,
		"ROUTE_INFO": 1,
		"END_OF_RIB": 2,
	}
)

func (x VAMPMessage_MessageType) Enum() *VAMPMessage_MessageType {
	p := new(VAMPMessage_MessageType)
	*p = x
	return p
}

func (x VAMPMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VAMPMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_protocols_vamp_api_vamp_proto_enumTypes[0].Descriptor()
}

func (VAMPMessage_MessageType) Type() protoreflect.EnumType {
	return &file_protocols_vamp_api_vamp_proto_enumTypes[0]
}

func (x VAMPMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VAMPMessage_MessageType.Descriptor instead.
func (VAMPMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_protocols_vamp_api_vamp_proto_rawDescGZIP(), []int{1, 0}
}

type VAMPSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VAMPSessionRequest) Reset() {
	*x = VAMPSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vamp_api_vamp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VAMPSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VAMPSessionRequest) ProtoMessage() {}

func (x *VAMPSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vamp_api_vamp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VAMPSessionRequest.ProtoReflect.Descriptor instead.
func (*VAMPSessionRequest) Descriptor() ([]byte, []int) {
	return file_protocols_vamp_api_vamp_proto_rawDescGZIP(), []int{0}
}

type VAMPMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType VAMPMessage_MessageType `protobuf:"varint,1,opt,name=message_type,json=messageType,proto3,enum=bio.vamp.VAMPMessage_MessageType" json:"message_type,omitempty"`
	VrfId       uint32                  `protobuf:"varint,2,opt,name=vrf_id,json=vrfId,proto3" json:"vrf_id,omitempty"`
	VrfInfo     *VRFInfo                `protobuf:"bytes,3,opt,name=vrf_info,json=vrfInfo,proto3" json:"vrf_info,omitempty"`
	RouteInfo   *RouteInfo              `protobuf:"bytes,4,opt,name=route_info,json=routeInfo,proto3" json:"route_info,omitempty"`
}

func (x *VAMPMessage) Reset() {
	*x = VAMPMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vamp_api_vamp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VAMPMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VAMPMessage) ProtoMessage() {}

func (x *VAMPMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vamp_api_vamp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VAMPMessage.ProtoReflect.Descriptor instead.
func (*VAMPMessage) Descriptor() ([]byte, []int) {
	return file_protocols_vamp_api_vamp_proto_rawDescGZIP(), []int{1}
}

func (x *VAMPMessage) GetMessageType() VAMPMessage_MessageType {
	if x != nil {
		return x.MessageType
	}
	return VAMPMessage_VRF_INFO
}

func (x *VAMPMessage) GetVrfId() uint32 {
	if x != nil {
		return x.VrfId
	}
	return 0
}

func (x *VAMPMessage) GetVrfInfo() *VRFInfo {
	if x != nil {
		return x.VrfInfo
	}
	return nil
}

func (x *VAMPMessage) GetRouteInfo() *RouteInfo {
	if x != nil {
		return x.RouteInfo
	}
	return nil
}

type VRFInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Announement bool   `protobuf:"varint,2,opt,name=announement,proto3" json:"announement,omitempty"`
}

func (x *VRFInfo) Reset() {
	*x = VRFInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vamp_api_vamp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VRFInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VRFInfo) ProtoMessage() {}

func (x *VRFInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vamp_api_vamp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VRFInfo.ProtoReflect.Descriptor instead.
func (*VRFInfo) Descriptor() ([]byte, []int) {
	return file_protocols_vamp_api_vamp_proto_rawDescGZIP(), []int{2}
}

func (x *VRFInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VRFInfo) GetAnnounement() bool {
	if x != nil {
		return x.Announement
	}
	return false
}

type RouteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Route        *api.Route `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	Announcement bool       `protobuf:"varint,2,opt,name=announcement,proto3" json:"announcement,omitempty"`
}

func (x *RouteInfo) Reset() {
	*x = RouteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vamp_api_vamp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteInfo) ProtoMessage() {}

func (x *RouteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vamp_api_vamp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteInfo.ProtoReflect.Descriptor instead.
func (*RouteInfo) Descriptor() ([]byte, []int) {
	return file_protocols_vamp_api_vamp_proto_rawDescGZIP(), []int{3}
}

func (x *RouteInfo) GetRoute() *api.Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *RouteInfo) GetAnnouncement() bool {
	if x != nil {
		return x.Announcement
	}
	return false
}

var File_protocols_vamp_api_vamp_proto protoreflect.FileDescriptor

var file_protocols_vamp_api_vamp_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x76, 0x61, 0x6d, 0x70,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x62, 0x69, 0x6f, 0x2e, 0x76, 0x61, 0x6d, 0x70, 0x1a, 0x11, 0x6e, 0x65, 0x74, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x56, 0x41, 0x4d, 0x50, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x0b, 0x56, 0x41,
	0x4d, 0x50, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x0c, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x76, 0x61, 0x6d, 0x70, 0x2e, 0x56, 0x41, 0x4d, 0x50, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x72, 0x66, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x76, 0x72, 0x66, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x76,
	0x61, 0x6d, 0x70, 0x2e, 0x56, 0x52, 0x46, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x76, 0x72, 0x66,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x76,
	0x61, 0x6d, 0x70, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x52, 0x46, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49,
	0x4e, 0x46, 0x4f, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x44, 0x5f, 0x4f, 0x46, 0x5f,
	0x52, 0x49, 0x42, 0x10, 0x02, 0x22, 0x3f, 0x0a, 0x07, 0x56, 0x52, 0x46, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x57, 0x0a, 0x09, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x69, 0x6f, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x32,
	0x54, 0x0a, 0x0b, 0x56, 0x41, 0x4d, 0x50, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x52, 0x75, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x62,
	0x69, 0x6f, 0x2e, 0x76, 0x61, 0x6d, 0x70, 0x2e, 0x56, 0x41, 0x4d, 0x50, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x69, 0x6f,
	0x2e, 0x76, 0x61, 0x6d, 0x70, 0x2e, 0x56, 0x41, 0x4d, 0x50, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x69, 0x6f, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2f,
	0x62, 0x69, 0x6f, 0x2d, 0x72, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2f, 0x76, 0x61, 0x6d, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_protocols_vamp_api_vamp_proto_rawDescOnce sync.Once
	file_protocols_vamp_api_vamp_proto_rawDescData = file_protocols_vamp_api_vamp_proto_rawDesc
)

func file_protocols_vamp_api_vamp_proto_rawDescGZIP() []byte {
	file_protocols_vamp_api_vamp_proto_rawDescOnce.Do(func() {
		file_protocols_vamp_api_vamp_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_vamp_api_vamp_proto_rawDescData)
	})
	return file_protocols_vamp_api_vamp_proto_rawDescData
}

var file_protocols_vamp_api_vamp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protocols_vamp_api_vamp_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protocols_vamp_api_vamp_proto_goTypes = []interface{}{
	(VAMPMessage_MessageType)(0), // 0: bio.vamp.VAMPMessage.MessageType
	(*VAMPSessionRequest)(nil),   // 1: bio.vamp.VAMPSessionRequest
	(*VAMPMessage)(nil),          // 2: bio.vamp.VAMPMessage
	(*VRFInfo)(nil),              // 3: bio.vamp.VRFInfo
	(*RouteInfo)(nil),            // 4: bio.vamp.RouteInfo
	(*api.Route)(nil),            // 5: bio.route.Route
}
var file_protocols_vamp_api_vamp_proto_depIdxs = []int32{
	0, // 0: bio.vamp.VAMPMessage.message_type:type_name -> bio.vamp.VAMPMessage.MessageType
	3, // 1: bio.vamp.VAMPMessage.vrf_info:type_name -> bio.vamp.VRFInfo
	4, // 2: bio.vamp.VAMPMessage.route_info:type_name -> bio.vamp.RouteInfo
	5, // 3: bio.vamp.RouteInfo.route:type_name -> bio.route.Route
	1, // 4: bio.vamp.VAMPService.RunSession:input_type -> bio.vamp.VAMPSessionRequest
	2, // 5: bio.vamp.VAMPService.RunSession:output_type -> bio.vamp.VAMPMessage
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protocols_vamp_api_vamp_proto_init() }
func file_protocols_vamp_api_vamp_proto_init() {
	if File_protocols_vamp_api_vamp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_vamp_api_vamp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VAMPSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vamp_api_vamp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VAMPMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vamp_api_vamp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VRFInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vamp_api_vamp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_vamp_api_vamp_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocols_vamp_api_vamp_proto_goTypes,
		DependencyIndexes: file_protocols_vamp_api_vamp_proto_depIdxs,
		EnumInfos:         file_protocols_vamp_api_vamp_proto_enumTypes,
		MessageInfos:      file_protocols_vamp_api_vamp_proto_msgTypes,
	}.Build()
	File_protocols_vamp_api_vamp_proto = out.File
	file_protocols_vamp_api_vamp_proto_rawDesc = nil
	file_protocols_vamp_api_vamp_proto_goTypes = nil
	file_protocols_vamp_api_vamp_proto_depIdxs = nil
}
