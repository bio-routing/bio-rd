load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "fsm.go",
        "fsm_active.go",
        "fsm_cease.go",
        "fsm_connect.go",
        "fsm_established.go",
        "fsm_idle.go",
        "fsm_manager.go",
        "fsm_open_confirm.go",
        "fsm_open_sent.go",
        "peer.go",
        "server.go",
        "sockopt.go",
        "tcplistener.go",
        "update_helper.go",
        "update_sender.go",
        "update_sender_add_path.go",
        "util.go",
        "withdraw.go",
    ],
    importpath = "github.com/bio-routing/bio-rd/protocols/bgp/server",
    visibility = ["//visibility:public"],
    deps = [
        "//config:go_default_library",
        "//net:go_default_library",
        "//protocols/bgp/packet:go_default_library",
        "//route:go_default_library",
        "//routingtable:go_default_library",
        "//routingtable/adjRIBIn:go_default_library",
        "//routingtable/adjRIBOut:go_default_library",
        "//routingtable/filter:go_default_library",
        "//routingtable/locRIB:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "fsm_open_sent_test.go",
        "fsm_test.go",
        "server_test.go",
        "update_helper_test.go",
        "withdraw_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//config:go_default_library",
        "//net:go_default_library",
        "//protocols/bgp/packet:go_default_library",
        "//route:go_default_library",
        "//routingtable:go_default_library",
        "//routingtable/filter:go_default_library",
        "//routingtable/locRIB:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
    ],
)
