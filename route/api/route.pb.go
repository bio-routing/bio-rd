// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/bio-routing/bio-rd/route/api/route.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	github.com/bio-routing/bio-rd/route/api/route.proto

It has these top-level messages:
	Route
	Path
	StaticPath
	BGPPath
	ASPathSegment
	LargeCommunity
	UnknownPathAttribute
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import bio_net "github.com/bio-routing/bio-rd/net/api"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Path_Type int32

const (
	Path_Static Path_Type = 0
	Path_BGP    Path_Type = 1
)

var Path_Type_name = map[int32]string{
	0: "Static",
	1: "BGP",
}
var Path_Type_value = map[string]int32{
	"Static": 0,
	"BGP":    1,
}

func (x Path_Type) String() string {
	return proto.EnumName(Path_Type_name, int32(x))
}
func (Path_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

type Route struct {
	Pfx   *bio_net.Prefix `protobuf:"bytes,1,opt,name=pfx" json:"pfx,omitempty"`
	Paths []*Path         `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Route) GetPfx() *bio_net.Prefix {
	if m != nil {
		return m.Pfx
	}
	return nil
}

func (m *Route) GetPaths() []*Path {
	if m != nil {
		return m.Paths
	}
	return nil
}

type Path struct {
	Type       Path_Type   `protobuf:"varint,1,opt,name=type,enum=bio.route.Path_Type" json:"type,omitempty"`
	StaticPath *StaticPath `protobuf:"bytes,2,opt,name=static_path,json=staticPath" json:"static_path,omitempty"`
	BGPPath    *BGPPath    `protobuf:"bytes,3,opt,name=BGP_path,json=BGPPath" json:"BGP_path,omitempty"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Path) GetType() Path_Type {
	if m != nil {
		return m.Type
	}
	return Path_Static
}

func (m *Path) GetStaticPath() *StaticPath {
	if m != nil {
		return m.StaticPath
	}
	return nil
}

func (m *Path) GetBGPPath() *BGPPath {
	if m != nil {
		return m.BGPPath
	}
	return nil
}

type StaticPath struct {
	NextHop *bio_net.IP `protobuf:"bytes,1,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
}

func (m *StaticPath) Reset()                    { *m = StaticPath{} }
func (m *StaticPath) String() string            { return proto.CompactTextString(m) }
func (*StaticPath) ProtoMessage()               {}
func (*StaticPath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StaticPath) GetNextHop() *bio_net.IP {
	if m != nil {
		return m.NextHop
	}
	return nil
}

type BGPPath struct {
	PathIdentifier    uint32                  `protobuf:"varint,1,opt,name=path_identifier,json=pathIdentifier" json:"path_identifier,omitempty"`
	NextHop           *bio_net.IP             `protobuf:"bytes,2,opt,name=next_hop,json=nextHop" json:"next_hop,omitempty"`
	LocalPref         uint32                  `protobuf:"varint,3,opt,name=local_pref,json=localPref" json:"local_pref,omitempty"`
	ASPath            []*ASPathSegment        `protobuf:"bytes,4,rep,name=AS_path,json=ASPath" json:"AS_path,omitempty"`
	Origin            uint32                  `protobuf:"varint,5,opt,name=origin" json:"origin,omitempty"`
	MED               uint32                  `protobuf:"varint,6,opt,name=MED" json:"MED,omitempty"`
	EBGP              bool                    `protobuf:"varint,7,opt,name=EBGP" json:"EBGP,omitempty"`
	BGPIdentifier     uint32                  `protobuf:"varint,8,opt,name=BGP_identifier,json=BGPIdentifier" json:"BGP_identifier,omitempty"`
	Source            *bio_net.IP             `protobuf:"bytes,9,opt,name=source" json:"source,omitempty"`
	Communities       []uint32                `protobuf:"varint,10,rep,packed,name=communities" json:"communities,omitempty"`
	LargeCommunities  []*LargeCommunity       `protobuf:"bytes,11,rep,name=large_communities,json=largeCommunities" json:"large_communities,omitempty"`
	OriginatorId      uint32                  `protobuf:"varint,12,opt,name=originator_id,json=originatorId" json:"originator_id,omitempty"`
	ClusterList       []uint32                `protobuf:"varint,13,rep,packed,name=cluster_list,json=clusterList" json:"cluster_list,omitempty"`
	UnknownAttributes []*UnknownPathAttribute `protobuf:"bytes,14,rep,name=unknown_attributes,json=unknownAttributes" json:"unknown_attributes,omitempty"`
}

func (m *BGPPath) Reset()                    { *m = BGPPath{} }
func (m *BGPPath) String() string            { return proto.CompactTextString(m) }
func (*BGPPath) ProtoMessage()               {}
func (*BGPPath) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BGPPath) GetPathIdentifier() uint32 {
	if m != nil {
		return m.PathIdentifier
	}
	return 0
}

func (m *BGPPath) GetNextHop() *bio_net.IP {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (m *BGPPath) GetLocalPref() uint32 {
	if m != nil {
		return m.LocalPref
	}
	return 0
}

func (m *BGPPath) GetASPath() []*ASPathSegment {
	if m != nil {
		return m.ASPath
	}
	return nil
}

func (m *BGPPath) GetOrigin() uint32 {
	if m != nil {
		return m.Origin
	}
	return 0
}

func (m *BGPPath) GetMED() uint32 {
	if m != nil {
		return m.MED
	}
	return 0
}

func (m *BGPPath) GetEBGP() bool {
	if m != nil {
		return m.EBGP
	}
	return false
}

func (m *BGPPath) GetBGPIdentifier() uint32 {
	if m != nil {
		return m.BGPIdentifier
	}
	return 0
}

func (m *BGPPath) GetSource() *bio_net.IP {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *BGPPath) GetCommunities() []uint32 {
	if m != nil {
		return m.Communities
	}
	return nil
}

func (m *BGPPath) GetLargeCommunities() []*LargeCommunity {
	if m != nil {
		return m.LargeCommunities
	}
	return nil
}

func (m *BGPPath) GetOriginatorId() uint32 {
	if m != nil {
		return m.OriginatorId
	}
	return 0
}

func (m *BGPPath) GetClusterList() []uint32 {
	if m != nil {
		return m.ClusterList
	}
	return nil
}

func (m *BGPPath) GetUnknownAttributes() []*UnknownPathAttribute {
	if m != nil {
		return m.UnknownAttributes
	}
	return nil
}

type ASPathSegment struct {
	ASSequence bool     `protobuf:"varint,1,opt,name=AS_sequence,json=ASSequence" json:"AS_sequence,omitempty"`
	ASNs       []uint32 `protobuf:"varint,2,rep,packed,name=ASNs" json:"ASNs,omitempty"`
}

func (m *ASPathSegment) Reset()                    { *m = ASPathSegment{} }
func (m *ASPathSegment) String() string            { return proto.CompactTextString(m) }
func (*ASPathSegment) ProtoMessage()               {}
func (*ASPathSegment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ASPathSegment) GetASSequence() bool {
	if m != nil {
		return m.ASSequence
	}
	return false
}

func (m *ASPathSegment) GetASNs() []uint32 {
	if m != nil {
		return m.ASNs
	}
	return nil
}

type LargeCommunity struct {
	GlobalAdministrator uint32 `protobuf:"varint,1,opt,name=global_administrator,json=globalAdministrator" json:"global_administrator,omitempty"`
	DataPart1           uint32 `protobuf:"varint,2,opt,name=data_part1,json=dataPart1" json:"data_part1,omitempty"`
	DataPart2           uint32 `protobuf:"varint,3,opt,name=data_part2,json=dataPart2" json:"data_part2,omitempty"`
}

func (m *LargeCommunity) Reset()                    { *m = LargeCommunity{} }
func (m *LargeCommunity) String() string            { return proto.CompactTextString(m) }
func (*LargeCommunity) ProtoMessage()               {}
func (*LargeCommunity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LargeCommunity) GetGlobalAdministrator() uint32 {
	if m != nil {
		return m.GlobalAdministrator
	}
	return 0
}

func (m *LargeCommunity) GetDataPart1() uint32 {
	if m != nil {
		return m.DataPart1
	}
	return 0
}

func (m *LargeCommunity) GetDataPart2() uint32 {
	if m != nil {
		return m.DataPart2
	}
	return 0
}

type UnknownPathAttribute struct {
	Optional   bool   `protobuf:"varint,1,opt,name=optional" json:"optional,omitempty"`
	Transitive bool   `protobuf:"varint,2,opt,name=transitive" json:"transitive,omitempty"`
	Partial    bool   `protobuf:"varint,3,opt,name=partial" json:"partial,omitempty"`
	TypeCode   uint32 `protobuf:"varint,4,opt,name=type_code,json=typeCode" json:"type_code,omitempty"`
	Value      []byte `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *UnknownPathAttribute) Reset()                    { *m = UnknownPathAttribute{} }
func (m *UnknownPathAttribute) String() string            { return proto.CompactTextString(m) }
func (*UnknownPathAttribute) ProtoMessage()               {}
func (*UnknownPathAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UnknownPathAttribute) GetOptional() bool {
	if m != nil {
		return m.Optional
	}
	return false
}

func (m *UnknownPathAttribute) GetTransitive() bool {
	if m != nil {
		return m.Transitive
	}
	return false
}

func (m *UnknownPathAttribute) GetPartial() bool {
	if m != nil {
		return m.Partial
	}
	return false
}

func (m *UnknownPathAttribute) GetTypeCode() uint32 {
	if m != nil {
		return m.TypeCode
	}
	return 0
}

func (m *UnknownPathAttribute) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*Route)(nil), "bio.route.Route")
	proto.RegisterType((*Path)(nil), "bio.route.Path")
	proto.RegisterType((*StaticPath)(nil), "bio.route.StaticPath")
	proto.RegisterType((*BGPPath)(nil), "bio.route.BGPPath")
	proto.RegisterType((*ASPathSegment)(nil), "bio.route.ASPathSegment")
	proto.RegisterType((*LargeCommunity)(nil), "bio.route.LargeCommunity")
	proto.RegisterType((*UnknownPathAttribute)(nil), "bio.route.UnknownPathAttribute")
	proto.RegisterEnum("bio.route.Path_Type", Path_Type_name, Path_Type_value)
}

func init() {
	proto.RegisterFile("github.com/bio-routing/bio-rd/route/api/route.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 732 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xcd, 0x72, 0xda, 0x48,
	0x10, 0x5e, 0xcc, 0x9f, 0x68, 0x10, 0xc6, 0xb3, 0xec, 0x96, 0xd6, 0xae, 0x5d, 0x63, 0xb9, 0xbc,
	0x66, 0x0f, 0x86, 0x32, 0xde, 0xda, 0x3b, 0xd8, 0x5e, 0xe2, 0x2a, 0xc7, 0xa5, 0x8c, 0x92, 0x4b,
	0x2e, 0xaa, 0x41, 0x1a, 0x60, 0x2a, 0x42, 0xa3, 0x48, 0x23, 0xc7, 0x3e, 0xe6, 0x49, 0xf2, 0x12,
	0x39, 0xe4, 0xf1, 0x52, 0x33, 0x23, 0xb0, 0xc8, 0x5f, 0xe5, 0xd6, 0xfd, 0x75, 0x7f, 0xdd, 0xfd,
	0xf5, 0xb4, 0x04, 0x17, 0x0b, 0x26, 0x96, 0xd9, 0x6c, 0xe0, 0xf3, 0xd5, 0x70, 0xc6, 0xf8, 0x59,
	0xc2, 0x33, 0xc1, 0xa2, 0x85, 0xb6, 0x83, 0xa1, 0x74, 0xe9, 0x90, 0xc4, 0x4c, 0x5b, 0x83, 0x38,
	0xe1, 0x82, 0xa3, 0xc6, 0x8c, 0xf1, 0x81, 0x02, 0xf6, 0x87, 0x3f, 0xe6, 0x47, 0x54, 0x28, 0x76,
	0x44, 0x85, 0xe6, 0xda, 0x2f, 0xa0, 0x8a, 0x25, 0x13, 0x1d, 0x41, 0x39, 0x9e, 0x3f, 0x58, 0xa5,
	0x5e, 0xa9, 0xdf, 0x1c, 0xed, 0x0e, 0x64, 0x49, 0x99, 0xe5, 0x24, 0x74, 0xce, 0x1e, 0xb0, 0x8c,
	0xa1, 0x13, 0xa8, 0xc6, 0x44, 0x2c, 0x53, 0x6b, 0xa7, 0x57, 0xde, 0x24, 0xe9, 0x41, 0x1c, 0x22,
	0x96, 0x58, 0x47, 0xed, 0x8f, 0x25, 0xa8, 0x48, 0x1f, 0xf5, 0xa1, 0x22, 0x1e, 0x63, 0xaa, 0x6a,
	0xb6, 0x47, 0xdd, 0x2f, 0xd2, 0x07, 0x2f, 0x1f, 0x63, 0x8a, 0x55, 0x06, 0xfa, 0x0f, 0x9a, 0xa9,
	0x20, 0x82, 0xf9, 0x9e, 0x2c, 0x61, 0xed, 0xa8, 0x21, 0x7e, 0x2b, 0x10, 0x5c, 0x15, 0x55, 0x5d,
	0x20, 0xdd, 0xd8, 0xe8, 0x0c, 0x8c, 0xc9, 0xd4, 0xd1, 0xa4, 0xb2, 0x22, 0xa1, 0x02, 0x69, 0x32,
	0x75, 0x14, 0xa3, 0x9e, 0x1b, 0xf6, 0x01, 0x54, 0x64, 0x53, 0x04, 0x50, 0xd3, 0x05, 0x3b, 0xbf,
	0xa0, 0x3a, 0x94, 0x27, 0x53, 0xa7, 0x53, 0xb2, 0xff, 0x05, 0x78, 0xea, 0x82, 0xfe, 0x06, 0x23,
	0xa2, 0x0f, 0xc2, 0x5b, 0xf2, 0x38, 0xdf, 0x49, 0x73, 0xb3, 0x93, 0x1b, 0x07, 0xd7, 0x65, 0xf0,
	0x19, 0x8f, 0xed, 0x4f, 0x15, 0x58, 0x97, 0x47, 0xa7, 0xb0, 0x2b, 0x27, 0xf1, 0x58, 0x40, 0x23,
	0xc1, 0xe6, 0x8c, 0x26, 0x8a, 0x6a, 0xe2, 0xb6, 0x84, 0x6f, 0x36, 0xe8, 0x56, 0xf1, 0x9d, 0xef,
	0x17, 0x47, 0x7f, 0x02, 0x84, 0xdc, 0x27, 0xa1, 0x17, 0x27, 0x74, 0xae, 0x04, 0x9a, 0xb8, 0xa1,
	0x10, 0xf9, 0x2c, 0xe8, 0x1c, 0xea, 0x63, 0x57, 0x8b, 0xaf, 0xa8, 0x17, 0xb1, 0x0a, 0xe2, 0xc7,
	0xae, 0x9c, 0xc9, 0xa5, 0x8b, 0x15, 0x8d, 0x04, 0xae, 0x69, 0x17, 0xfd, 0x0e, 0x35, 0x9e, 0xb0,
	0x05, 0x8b, 0xac, 0xaa, 0xaa, 0x96, 0x7b, 0xa8, 0x03, 0xe5, 0xe7, 0xd7, 0x57, 0x56, 0x4d, 0x81,
	0xd2, 0x44, 0x08, 0x2a, 0xd7, 0x93, 0xa9, 0x63, 0xd5, 0x7b, 0xa5, 0xbe, 0x81, 0x95, 0x8d, 0x4e,
	0xa0, 0x2d, 0xd7, 0x5d, 0xd0, 0x67, 0x28, 0x82, 0x39, 0x99, 0x3a, 0x05, 0x79, 0xc7, 0x50, 0x4b,
	0x79, 0x96, 0xf8, 0xd4, 0x6a, 0x7c, 0x2d, 0x2e, 0x0f, 0xa1, 0x1e, 0x34, 0x7d, 0xbe, 0x5a, 0x65,
	0x11, 0x13, 0x8c, 0xa6, 0x16, 0xf4, 0xca, 0x7d, 0x13, 0x17, 0x21, 0xf4, 0x3f, 0xec, 0x85, 0x24,
	0x59, 0x50, 0xaf, 0x98, 0xd7, 0x54, 0x42, 0xff, 0x28, 0x08, 0xbd, 0x95, 0x39, 0x97, 0x79, 0xca,
	0x23, 0xee, 0x84, 0x45, 0x5f, 0xd6, 0x39, 0x06, 0x53, 0xab, 0x24, 0x82, 0x27, 0x1e, 0x0b, 0xac,
	0x96, 0x1a, 0xba, 0xf5, 0x04, 0xde, 0x04, 0xe8, 0x08, 0x5a, 0x7e, 0x98, 0xa5, 0x82, 0x26, 0x5e,
	0xc8, 0x52, 0x61, 0x99, 0xf9, 0x3c, 0x1a, 0xbb, 0x65, 0xa9, 0x40, 0x77, 0x80, 0xb2, 0xe8, 0x4d,
	0xc4, 0xdf, 0x45, 0x1e, 0x11, 0x22, 0x61, 0xb3, 0x4c, 0xd0, 0xd4, 0x6a, 0xab, 0x81, 0x0e, 0x0b,
	0x03, 0xbd, 0xd2, 0x49, 0x72, 0xdf, 0xe3, 0x75, 0x1e, 0xde, 0xcb, 0xa9, 0x1b, 0x24, 0xb5, 0xaf,
	0xc0, 0xdc, 0x7a, 0x24, 0x74, 0x08, 0xcd, 0xb1, 0xeb, 0xa5, 0xf4, 0x6d, 0x46, 0x23, 0x5f, 0x7f,
	0x36, 0x06, 0x86, 0xb1, 0xeb, 0xe6, 0x88, 0x7c, 0x93, 0xb1, 0x7b, 0xa7, 0xbf, 0x3f, 0x13, 0x2b,
	0xdb, 0x7e, 0x5f, 0x82, 0xf6, 0xf6, 0x0a, 0xd0, 0x39, 0x74, 0x17, 0x21, 0x9f, 0x91, 0xd0, 0x23,
	0xc1, 0x8a, 0x45, 0x2c, 0x15, 0x89, 0x54, 0x99, 0x1f, 0xe3, 0xaf, 0x3a, 0x36, 0x2e, 0x86, 0xe4,
	0xa5, 0x05, 0x44, 0x10, 0x2f, 0x26, 0x89, 0x38, 0x57, 0x37, 0x69, 0xe2, 0x86, 0x44, 0x1c, 0x09,
	0x6c, 0x85, 0x47, 0xeb, 0x43, 0x5c, 0x87, 0x47, 0xf6, 0x87, 0x12, 0x74, 0xbf, 0xa5, 0x1a, 0xed,
	0x83, 0xc1, 0x63, 0xc1, 0x78, 0x44, 0xc2, 0x5c, 0xce, 0xc6, 0x47, 0x7f, 0x01, 0x88, 0x84, 0x44,
	0x29, 0x13, 0xec, 0x9e, 0xaa, 0x96, 0x06, 0x2e, 0x20, 0xc8, 0x82, 0xba, 0x6c, 0xc7, 0x48, 0xa8,
	0x1a, 0x1a, 0x78, 0xed, 0xa2, 0x03, 0x68, 0xc8, 0xbf, 0x86, 0xe7, 0xf3, 0x80, 0x5a, 0x15, 0x35,
	0x8c, 0x21, 0x81, 0x4b, 0x1e, 0x50, 0xd4, 0x85, 0xea, 0x3d, 0x09, 0x33, 0xaa, 0x0e, 0xbc, 0x85,
	0xb5, 0x33, 0xf9, 0xe7, 0xf5, 0xe9, 0x4f, 0xfe, 0x59, 0x67, 0x35, 0xf5, 0x63, 0xbc, 0xf8, 0x1c,
	0x00, 0x00, 0xff, 0xff, 0x00, 0xf1, 0xa7, 0x12, 0x8b, 0x05, 0x00, 0x00,
}
